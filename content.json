{"meta":{"title":"Ray of Hope","subtitle":"","description":"","author":"Ray Lee","url":"http://blog.raycn.pub","root":"/"},"pages":[{"title":"","date":"2020-08-16T13:30:14.033Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"about/index.html","permalink":"http://blog.raycn.pub/about/index.html","excerpt":"","text":"Ray Lee's Resume 李锐 软件测试工程师/测试项目经理 基本信息 姓名 李锐 学历 本科 专业 生物技术 毕业院校 西安电子科技大学 毕业年份 2016 联系方式 手机 l8l-2466-74l2 邮箱 rayleesky@outlook.com 个人主页 axisray.github.io GitHub github.com/axisray 技术栈 语言 C#，Python 技能 Linux、网络协议 证书&荣誉 证书 PMP项目管理认证 荣誉 深信服“共同创业者” 工作经历 深信服－测试项目经理（M4） — 2019年3月 至今 1、测试项目经理 AF8.0.25控制面重构版本 测试PM 项目团队：20+人，项目时间：2019年10月 至 2020年8月 针对重构版本特点，制定模板化测试设计方案。 降低新人测试设计上手难度，消除测试设计延期风险。 联合EP团队设计接口自动化测试方案，并推动在版本内落地。 引入zabbix/grafana改进稳定性环境监控。 相比人工监控减少了人力投入和问题识别的滞后性。 AF8.0.14版本 测试PM 项目团队：8人，项目时间：2019年4月 至 2019年9月 设计实现应用识别的识别率自动化验收方案，提升测试效率。 深信服－软件测试工程师（T4） — 2018年3月 至 2019年3月 1、功能/性能测试设计和执行 负责AF8.0.8版本文件杀毒模块测试设计和执行 根据云平台API接口规范，模拟云平台响应，实现模块内部逻辑全覆盖。 版本内发现缺陷最多，发布后无漏测问题，当季度绩效为A。 负责AF8.0.10重构版本ALG、NAT等核心模块的功能/性能测试设计/执行。 引入T-rex性能测试工具，减少SPT测试仪的依赖，提升测试效率。 2、应急支撑/自动化测试 支撑一线POC测试。 负责僵尸网络模块基线自动化方案重构设计及编写。 对用例和关键字进行整合优化，原有用例构建时间缩短30%。 引入scapy包回放解决自动化障碍，模块自动化率提升到80%。 深信服－技术支持工程师（T3） — 2016年7月 至 2018年3月 1、负责金融行业安全产品项目方案设计、实施和售后服务 在某银行的网点WIFI项目中，编写Python脚本用于全国1800+网关设备的维护。使用脚本模拟登陆和操作，实现批量化版本获取、序列号查询更新、配置备份、网监对接实施等，有效提升工作效率。 2、负责渠道微信预约系统的开发维护（微信后端，服务器运维） 负责平台架构设计。为了便于部署和后期扩展，采用容器化方式部署，使用Docker-Compose对容器编排。 负责微信后端的开发，实现微信接口的二次封装，便于Web管理平台调用；实现微信OAuth认证和二维码签到功能。 教育经历 西安电子科技大学 - 生物技术专业（全日制本科）2012-2016 个人项目 MiFareCloner（Arduino）） 基于Arduino+PN532的MiFare 1K卡片的复制器 移植libnfc读写CUID卡的功能到Arduino平台，实现卡片克隆。 osu-BeatmapAutoLoader（C#） OSU!的辅助程序 通过Win32Api Hook拦截程序请求，绕开浏览器调用，实现联机模式BeatMap的自动下载和导入。 CPViewer（C++，毕业设计） 基于VTK+QT的，医学图像（CT/OPT）三维重建程序。 开源贡献 修正libnfc在Windows下编译错误和无法读取配置文件的问题 https://github.com/nfc-tools/libnfc/pull/308 修正GetMenu函数始终返回Null的问题 https://github.com/JeffreySu/WeiXinMPSDK/pull/973 增加多配置文件切换功能 https://github.com/kxjhlele/v2ray-taskbar/pull/5"},{"title":"","date":"2020-08-16T13:30:14.037Z","updated":"2020-08-16T13:30:14.037Z","comments":true,"path":"about/static/css/style.css","permalink":"http://blog.raycn.pub/about/static/css/style.css","excerpt":"","text":"@font-face {font-family: 'iconfont'; src: url('../fonts/iconfont.eot'); /* IE9*/ src: url('../fonts/iconfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */ url('../fonts/iconfont.woff') format('woff'), /* chrome、firefox */ url('../fonts/iconfont.ttf') format('truetype'), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/ url('../fonts/iconfont.svg#iconfont') format('svg'); /* iOS 4.1- */ } .icon-work:before { content: \"\\eac9\"; } .icon-project:before { content: \"\\eaf4\"; } .icon-phone:before { content: \"\\ec7a\"; } .icon-stars:before { content: \"\\ed32\"; } .icon-star:before { content: \"\\ed1b\"; } .icon-person:before { content: \"\\ec88\"; } .icon-librarybooks:before { content: \"\\ebf9\"; } .icon-education:before { content: \"\\ebca\"; } .icon-create:before { content: \"\\eaf8\"; } .icon-call:before { content: \"\\eab6\"; } .icon-weixin:before { content: \"\\3488\"; } .icon-build:before { content: \"\\eaa2\"; } .icon-edit:before { content: \"\\eb31\"; } .icon-flower:before { content: \"\\ec0a\"; } .icon-playlistadd:before { content: \"\\ecae\"; } .icon-delete:before { content: \"\\e61b\"; } .icon-trophy:before { content: \"\\e80b\"; } .icon-favorite:before { content: \"\\eb4c\"; } span { display: inline-block; } .label-value{ width: 200px; vertical-align: top; } .iconfont { font-family:\"iconfont\" !important; font-size:1.1em;font-style:normal; color:inherit; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; -moz-osx-font-smoothing: grayscale; } * { box-sizing: border-box; margin: 0; } h1, h2, h3, h4, h5 { font-weight: 500; color: #607d8b; line-height: 1.5; } .progress-list div { width: 100%; margin-left: 200px; } .info-list, .progress-list{ list-style: none; padding-left: 0px; font-size: 16px; line-height: 2; } .stack-list { list-style: none; padding-left: 0px; line-height: 1.5; } .stack-list li { margin-bottom: 12px; } .right-list li { margin-bottom: 12px; } hr { margin-bottom: 8px; } .info-unit { color: #666; margin-bottom: 20px; } .remodal-img h3 { float: left; margin-bottom: 10px; } .remodal-img input { float: left; width: 480px; height: 42px; font-size: 20px; padding: 6px; color: #666; } .remodal-img button { float: right; background: #607d8b; } .remodal-img button:hover{ float: right; background: #607d8b; } @media screen{ body { background-color: lightslategray; } } @media print{ body { background-color: white; } } body { background-color: lightslategray; font-family: sans-serif, Microsoft Yahei, Helvetica Neue; zoom: 80%; } footer { } p { line-height: 1.5; } progress { background-color: #f6f6f6; display: inline; /*width: 195px;*/ height: 1em; } progress::-webkit-progress-bar { background-color: #e0eaf0; } progress::-webkit-progress-value { background-color: #708d9b; } progress::-moz-progress-bar { background-color: #e0eaf0; } progress::-moz-progress-value { background-color: #708d9b; } .progress-list { line-height: 2; } .me { text-align: center; margin-bottom: 20px; } .weixin{ margin-top: 20px; background-color: #e0eaf0; position: relative; padding-top: 40px; padding-bottom: 40px; text-align: center; } .weixin img{ width: 200px; } .left-label { font-weight: bold; display: inline-block; width: 120px; } .portrait { margin: 0 auto; margin-top:20px; margin-bottom: 10px; background-image:url('https://avatars0.githubusercontent.com/u/21081491?v=3&s=460'); background-size: 120%; background-position:center; border-radius:50%; border:5px solid #607d8b; width:160px; height:160px; } .container { position: relative; margin: 0 auto; width: 1050px; height: auto; background-color: white; } .side { position: absolute; width: 360px; height: 100%; background-color: whitesmoke; padding-left: 20px; padding-right: 20px; } .main { position: relative;; margin-left: 360px; min-height: 100%; padding: 20px; } .info-header:hover { background-color: #d4dee4; } .info-unit ul li:hover { background-color: #d4dee4; } .info-header .unit-remove { float: right; margin-left: 20px; visibility: hidden; cursor: pointer; } .info-header .item-add { float: right; margin-left: 20px; margin-right: 2px; visibility: hidden; cursor: pointer; } .info-title { font-weight: bold; } .item-remove { position: absolute; right: 2px; margin-right: 2px; visibility: hidden; cursor: pointer; } ul li{ position: relative; } .experience-list .item-remove { position: absolute; right: 2px; top: 0px; margin-right: 2px; visibility: hidden; cursor: pointer; } .item-title { font-weight: bold; } .stack-list .item-remove { position: absolute; right: 2px; top: 0px; margin-right: 2px; visibility: hidden; cursor: pointer; } @media print{ .noprint { display: none } } @media screen{ .noscreen { display: none } }"},{"title":"","date":"2020-08-16T13:30:14.037Z","updated":"2020-08-16T13:30:14.037Z","comments":true,"path":"about/static/fonts/demo.css","permalink":"http://blog.raycn.pub/about/static/fonts/demo.css","excerpt":"","text":"*{margin: 0;padding: 0;list-style: none;} /* KISSY CSS Reset 理念：1. reset 的目的不是清除浏览器的默认样式，这仅是部分工作。清除和重置是紧密不可分的。 2. reset 的目的不是让默认样式在所有浏览器下一致，而是减少默认样式有可能带来的问题。 3. reset 期望提供一套普适通用的基础样式。但没有银弹，推荐根据具体需求，裁剪和修改后再使用。 特色：1. 适应中文；2. 基于最新主流浏览器。 维护：玉伯, 正淳 */ /** 清除内外边距 **/ body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, /* structural elements 结构元素 */ dl, dt, dd, ul, ol, li, /* list elements 列表元素 */ pre, /* text formatting elements 文本格式元素 */ form, fieldset, legend, button, input, textarea, /* form elements 表单元素 */ th, td /* table elements 表格元素 */ { margin: 0; padding: 0; } /** 设置默认字体 **/ body, button, input, select, textarea /* for ie */ { font: 12px/1.5 tahoma, arial, \\5b8b\\4f53, sans-serif; } h1, h2, h3, h4, h5, h6 { font-size: 100%; } address, cite, dfn, em, var { font-style: normal; } /* 将斜体扶正 */ code, kbd, pre, samp { font-family: courier new, courier, monospace; } /* 统一等宽字体 */ small { font-size: 12px; } /* 小于 12px 的中文很难阅读，让 small 正常化 */ /** 重置列表元素 **/ ul, ol { list-style: none; } /** 重置文本格式元素 **/ a { text-decoration: none; } a:hover { text-decoration: underline; } /** 重置表单元素 **/ legend { color: #000; } /* for ie6 */ fieldset, img { border: 0; } /* img 搭车：让链接里的 img 无边框 */ button, input, select, textarea { font-size: 100%; } /* 使得表单元素在 ie 下能继承字体大小 */ /* 注：optgroup 无法扶正 */ /** 重置表格元素 **/ table { border-collapse: collapse; border-spacing: 0; } /* 清除浮动 */ .ks-clear:after, .clear:after { content: '\\20'; display: block; height: 0; clear: both; } .ks-clear, .clear { *zoom: 1; } .main {padding: 30px 100px;} .main h1{font-size:36px; color:#333; text-align:left;margin-bottom:30px; border-bottom: 1px solid #eee;} .helps{margin-top:40px;} .helps pre{ padding:20px; margin:10px 0; border:solid 1px #e7e1cd; background-color: #fffdef; overflow: auto; } .icon_lists li{ float:left; width: 100px; height:180px; text-align: center; } .icon_lists .icon{ font-size: 42px; line-height: 100px; margin: 10px 0; color:#333; transition: font-size 0.25s ease-out 0s; } .icon_lists .icon:hover{ font-size: 100px; }"},{"title":"","date":"2020-08-16T13:30:14.037Z","updated":"2020-08-16T13:30:14.037Z","comments":true,"path":"about/static/fonts/demo.html","permalink":"http://blog.raycn.pub/about/static/fonts/demo.html","excerpt":"","text":"IconFont IconFont 图标 &#xea39; account_circle &amp;#xea39; .accountcircle &#xeac9; card_travel &amp;#xeac9; .cardtravel &#xeaf4; content_paste &amp;#xeaf4; .contentpaste &#xec7a; phone &amp;#xec7a; .phone &#xec7b; phone_android &amp;#xec7b; .phoneandroid &#xed32; stars &amp;#xed32; .stars &#xed1d; star_outline &amp;#xed1d; .staroutline &#xed1b; star &amp;#xed1b; .star &#xec88; person &amp;#xec88; .person &#xedac; work &amp;#xedac; .work &#xebf9; library_books &amp;#xebf9; .librarybooks &#xebca; import_contacts &amp;#xebca; .importcontacts &#xeaf8; create &amp;#xeaf8; .create &#xead7; comment &amp;#xead7; .comment &#xeab6; call &amp;#xeab6; .call &#x3488; 微信 &amp;#x3488; .weixin &#xeabe; camera &amp;#xeabe; .camera &#xeaa2; build &amp;#xeaa2; .build &#xea38; account_box &amp;#xea38; .accountbox &#xea7d; attach_money &amp;#xea7d; .attachmoney &#xea95; bookmark_outline &amp;#xea95; .bookmarkoutline &#xead2; chat_bubble_outline &amp;#xead2; .chatbubbleoutline &#xead0; chat &amp;#xead0; .chat &#xeadf; cloud &amp;#xeadf; .cloud &#xeb0f; desktop_windows &amp;#xeb0f; .desktopwindows &#xeb0e; desktop_mac &amp;#xeb0e; .desktopmac &#xeb31; edit &amp;#xeb31; .edit &#xeb4d; favorite_outline &amp;#xeb4d; .favoriteoutline &#xeb4c; favorite &amp;#xeb4c; .favorite &#xeb45; exposure_plus_1 &amp;#xeb45; .exposureplus1 &#xeb48; extension &amp;#xeb48; .extension &#xeb6f; flag &amp;#xeb6f; .flag &#xeb6e; fitness_center &amp;#xeb6e; .fitnesscenter &#xeb9c; free_breakfast &amp;#xeb9c; .freebreakfast &#xeb97; forum &amp;#xeb97; .forum &#xeba3; goat &amp;#xeba3; .goat &#xebc2; home &amp;#xebc2; .home &#xebc5; hourglass_empty &amp;#xebc5; .hourglassempty &#xec0a; local_florist &amp;#xec0a; .localflorist &#xec24; location_on &amp;#xec24; .locationon &#xec10; local_library &amp;#xec10; .locallibrary &#xecae; playlist_add &amp;#xecae; .playlistadd &#xebc0; highlight_remove &amp;#xebc0; .highlightremove &#xe61b; delete &amp;#xe61b; .delete &#xe610; delete &amp;#xe610; .delete1 &#xe643; delete &amp;#xe643; .delete2 &#xe620; add &amp;#xe620; .add &#xe676; add &amp;#xe676; .add1 &#xe816; trophy &amp;#xe816; .trophy &#xe6fc; trophy &amp;#xe6fc; .trophy1 &#xe80b; trophy &amp;#xe80b; .trophy2 第一步：使用font-face声明字体 @font-face {font-family: 'iconfont'; src: url('iconfont.eot'); /* IE9*/ src: url('iconfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */ url('iconfont.woff') format('woff'), /* chrome、firefox */ url('iconfont.ttf') format('truetype'), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/ url('iconfont.svg#iconfont') format('svg'); /* iOS 4.1- */ } 第二步：定义使用iconfont的样式 .iconfont{ font-family:\"iconfont\" !important; font-size:16px;font-style:normal; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; -moz-osx-font-smoothing: grayscale;} 第三步：挑选相应图标并获取字体编码，应用于页面 &lt;i class=\"iconfont\"&gt;&amp;#x33;&lt;/i&gt;"},{"title":"","date":"2020-08-16T13:30:14.037Z","updated":"2020-08-16T13:30:14.037Z","comments":true,"path":"about/static/fonts/iconfont.css","permalink":"http://blog.raycn.pub/about/static/fonts/iconfont.css","excerpt":"","text":"@font-face {font-family: \"iconfont\"; src: url('iconfont.eot?t=1472035662'); /* IE9*/ src: url('iconfont.eot?t=1472035662#iefix') format('embedded-opentype'), /* IE6-IE8 */ url('iconfont.woff?t=1472035662') format('woff'), /* chrome, firefox */ url('iconfont.ttf?t=1472035662') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/ url('iconfont.svg?t=1472035662#iconfont') format('svg'); /* iOS 4.1- */ } .iconfont { font-family:\"iconfont\" !important; font-size:16px; font-style:normal; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; -moz-osx-font-smoothing: grayscale; } .icon-accountcircle:before { content: \"\\ea39\"; } .icon-cardtravel:before { content: \"\\eac9\"; } .icon-contentpaste:before { content: \"\\eaf4\"; } .icon-phone:before { content: \"\\ec7a\"; } .icon-phoneandroid:before { content: \"\\ec7b\"; } .icon-stars:before { content: \"\\ed32\"; } .icon-staroutline:before { content: \"\\ed1d\"; } .icon-star:before { content: \"\\ed1b\"; } .icon-person:before { content: \"\\ec88\"; } .icon-work:before { content: \"\\edac\"; } .icon-librarybooks:before { content: \"\\ebf9\"; } .icon-importcontacts:before { content: \"\\ebca\"; } .icon-create:before { content: \"\\eaf8\"; } .icon-comment:before { content: \"\\ead7\"; } .icon-call:before { content: \"\\eab6\"; } .icon-weixin:before { content: \"\\3488\"; } .icon-camera:before { content: \"\\eabe\"; } .icon-build:before { content: \"\\eaa2\"; } .icon-accountbox:before { content: \"\\ea38\"; } .icon-attachmoney:before { content: \"\\ea7d\"; } .icon-bookmarkoutline:before { content: \"\\ea95\"; } .icon-chatbubbleoutline:before { content: \"\\ead2\"; } .icon-chat:before { content: \"\\ead0\"; } .icon-cloud:before { content: \"\\eadf\"; } .icon-desktopwindows:before { content: \"\\eb0f\"; } .icon-desktopmac:before { content: \"\\eb0e\"; } .icon-edit:before { content: \"\\eb31\"; } .icon-favoriteoutline:before { content: \"\\eb4d\"; } .icon-favorite:before { content: \"\\eb4c\"; } .icon-exposureplus1:before { content: \"\\eb45\"; } .icon-extension:before { content: \"\\eb48\"; } .icon-flag:before { content: \"\\eb6f\"; } .icon-fitnesscenter:before { content: \"\\eb6e\"; } .icon-freebreakfast:before { content: \"\\eb9c\"; } .icon-forum:before { content: \"\\eb97\"; } .icon-goat:before { content: \"\\eba3\"; } .icon-home:before { content: \"\\ebc2\"; } .icon-hourglassempty:before { content: \"\\ebc5\"; } .icon-localflorist:before { content: \"\\ec0a\"; } .icon-locationon:before { content: \"\\ec24\"; } .icon-locallibrary:before { content: \"\\ec10\"; } .icon-playlistadd:before { content: \"\\ecae\"; } .icon-highlightremove:before { content: \"\\ebc0\"; } .icon-delete:before { content: \"\\e61b\"; } .icon-delete1:before { content: \"\\e610\"; } .icon-delete2:before { content: \"\\e643\"; } .icon-add:before { content: \"\\e620\"; } .icon-add1:before { content: \"\\e676\"; } .icon-trophy:before { content: \"\\e816\"; } .icon-trophy1:before { content: \"\\e6fc\"; } .icon-trophy2:before { content: \"\\e80b\"; }"},{"title":"","date":"2020-08-16T13:30:14.037Z","updated":"2020-08-16T13:30:14.037Z","comments":true,"path":"about/static/js/modal.js","permalink":"http://blog.raycn.pub/about/static/js/modal.js","excerpt":"","text":"/* ========================================================= * bootstrap-modal.js v1.4.0 * http://twitter.github.com/bootstrap/javascript.html#modal * ========================================================= * Copyright 2011 Twitter, Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * ========================================================= */ !function( $ ){ \"use strict\" /* CSS TRANSITION SUPPORT (https://gist.github.com/373874) * ======================================================= */ var transitionEnd $(document).ready(function () { $.support.transition = (function () { var thisBody = document.body || document.documentElement , thisStyle = thisBody.style , support = thisStyle.transition !== undefined || thisStyle.WebkitTransition !== undefined || thisStyle.MozTransition !== undefined || thisStyle.MsTransition !== undefined || thisStyle.OTransition !== undefined return support })() // set CSS transition event type if ( $.support.transition ) { transitionEnd = \"TransitionEnd\" if ( $.browser.webkit ) { transitionEnd = \"webkitTransitionEnd\" } else if ( $.browser.mozilla ) { transitionEnd = \"transitionend\" } else if ( $.browser.opera ) { transitionEnd = \"oTransitionEnd\" } } }) /* MODAL PUBLIC CLASS DEFINITION * ============================= */ var Modal = function ( content, options ) { this.settings = $.extend({}, $.fn.modal.defaults, options) this.$element = $(content) .delegate('.close', 'click.modal', $.proxy(this.hide, this)) if ( this.settings.show ) { this.show() } return this } Modal.prototype = { toggle: function () { return this[!this.isShown ? 'show' : 'hide']() } , show: function () { var that = this this.isShown = true this.$element.trigger('show') escape.call(this) backdrop.call(this, function () { var transition = $.support.transition && that.$element.hasClass('fade') that.$element .appendTo(document.body) .show() if (transition) { that.$element[0].offsetWidth // force reflow } that.$element.addClass('in') transition ? that.$element.one(transitionEnd, function () { that.$element.trigger('shown') }) : that.$element.trigger('shown') }) return this } , hide: function (e) { e && e.preventDefault() if ( !this.isShown ) { return this } var that = this this.isShown = false escape.call(this) this.$element .trigger('hide') .removeClass('in') $.support.transition && this.$element.hasClass('fade') ? hideWithTransition.call(this) : hideModal.call(this) return this } } /* MODAL PRIVATE METHODS * ===================== */ function hideWithTransition() { // firefox drops transitionEnd events :{o var that = this , timeout = setTimeout(function () { that.$element.unbind(transitionEnd) hideModal.call(that) }, 500) this.$element.one(transitionEnd, function () { clearTimeout(timeout) hideModal.call(that) }) } function hideModal (that) { this.$element .hide() .trigger('hidden') backdrop.call(this) } function backdrop ( callback ) { var that = this , animate = this.$element.hasClass('fade') ? 'fade' : '' if ( this.isShown && this.settings.backdrop ) { var doAnimate = $.support.transition && animate this.$backdrop = $('') .appendTo(document.body) if ( this.settings.backdrop != 'static' ) { this.$backdrop.click($.proxy(this.hide, this)) } if ( doAnimate ) { this.$backdrop[0].offsetWidth // force reflow } this.$backdrop.addClass('in') doAnimate ? this.$backdrop.one(transitionEnd, callback) : callback() } else if ( !this.isShown && this.$backdrop ) { this.$backdrop.removeClass('in') $.support.transition && this.$element.hasClass('fade')? this.$backdrop.one(transitionEnd, $.proxy(removeBackdrop, this)) : removeBackdrop.call(this) } else if ( callback ) { callback() } } function removeBackdrop() { this.$backdrop.remove() this.$backdrop = null } function escape() { var that = this if ( this.isShown && this.settings.keyboard ) { $(document).bind('keyup.modal', function ( e ) { if ( e.which == 27 ) { that.hide() } }) } else if ( !this.isShown ) { $(document).unbind('keyup.modal') } } /* MODAL PLUGIN DEFINITION * ======================= */ $.fn.modal = function ( options ) { var modal = this.data('modal') if (!modal) { if (typeof options == 'string') { options = { show: /show|toggle/.test(options) } } return this.each(function () { $(this).data('modal', new Modal(this, options)) }) } if ( options === true ) { return modal } if ( typeof options == 'string' ) { modal[options]() } else if ( modal ) { modal.toggle() } return this } $.fn.modal.Modal = Modal $.fn.modal.defaults = { backdrop: false , keyboard: false , show: false } /* MODAL DATA- IMPLEMENTATION * ========================== */ $(document).ready(function () { $('body').delegate('[data-controls-modal]', 'click', function (e) { e.preventDefault() var $this = $(this).data('show', true) $('#' + $this.attr('data-controls-modal')).modal( $this.data() ) }) }) }( window.jQuery || window.ender );"},{"title":"","date":"2020-08-16T13:30:14.037Z","updated":"2020-08-16T13:30:14.037Z","comments":true,"path":"about/static/js/script.js","permalink":"http://blog.raycn.pub/about/static/js/script.js","excerpt":"","text":"// First, checks if it isn't implemented yet. if (!String.prototype.format) { String.prototype.format = function() { var args = arguments; return this.replace(/{(\\d+)}/g, function(match, number) { return typeof args[number] != 'undefined' ? args[number] : match ; }); }; } jQuery(document).ready(function($) { $(\".left-label\").attr('contenteditable', 'true'); $(\".label-value\").attr('contenteditable', 'true'); $(\".info-title\").attr('contenteditable', 'true'); $(\"h3\").attr('contenteditable', 'true'); $(\"p\").attr('contenteditable', 'true'); $(\".right-paragraph p\").attr('contenteditable', 'true'); $(\"#username\").attr('contenteditable', 'true'); $(\"#persona-tag\").attr('contenteditable', 'true'); $(\".info-unit ul li\").append(''); $(\".info-unit\").filter(function(index) { return ($(this).children('ul').length); }).children(\"h2\").append(''); $(\".info-unit h2\").append(''); var portrait_modal = $('[data-remodal-id=portrait-modal]').remodal(); $(\".portrait\").click(function(event) { portrait_modal.open(); }); $('[data-remodal-id=portrait-modal] button').click(function(event) { $(\".portrait\").css('background-image', 'url(\"{0}\")'.format($(\"#avatar-url\").val())); }); var weixin_modal = $('[data-remodal-id=weixin-modal]').remodal(); $(\".weixin\").click(function(event) { weixin_modal.open(); }); $('[data-remodal-id=weixin-modal] button').click(function(event) { $(\".weixin img\").attr('src', $(\"#weixin-url\").val()); }); $('.info-header').hover(function() { /* Stuff to do when the mouse enters the element */ $(this).children('.unit-remove').css('visibility', 'visible'); $(this).children('.item-add').css('visibility', 'visible'); }, function() { /* Stuff to do when the mouse leaves the element */ $(this).children('.unit-remove').css('visibility', 'hidden'); $(this).children('.item-add').css('visibility', 'hidden'); }); $('.info-unit ul li').hover(function() { /* Stuff to do when the mouse enters the element */ $(this).children('.item-remove').css('visibility', 'visible'); }, function() { /* Stuff to do when the mouse leaves the element */ $(this).children('.item-remove').css('visibility', 'hidden'); }); $('.unit-remove').click(function(event) { $(this).closest(\".info-unit\").remove(); }); $('.item-remove').click(function(event) { $(this).closest(\"li\").remove(); }); $('.item-add').click(function(event) { var unit = $(this).closest(\".info-unit\"); if (unit.children('ul')){ var list = unit.children('ul'); var clone = list.children('li:first-child').clone(true); list.append(clone); } }); $(\"progress\").click(function(event) { $(this).attr(\"value\", event.offsetX/$(this).width()/0.8 * $(this).attr(\"max\")); }); // $(\"*\").removeAttr('contenteditable'); });"}],"posts":[{"title":"Git如何合入上游仓库的分支","slug":"git-merge-upstream","date":"2020-02-06T12:03:45.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2020/02/06/git-merge-upstream/","link":"","permalink":"http://blog.raycn.pub/2020/02/06/git-merge-upstream/","excerpt":"背景github上的开源项目有时无法完全满足自己需要，或者项目本身存在BUG，但是等不到开发者去修复。这时候我们往往会选择fork，然后自行修改或使用。但是一段时间后，原项目开发者可能会更新项目，追加新的功能或者修复已知BUG。这时，为了避免与上游脱节，我们需要将上游仓库合入到我们fork的仓库中。","text":"背景github上的开源项目有时无法完全满足自己需要，或者项目本身存在BUG，但是等不到开发者去修复。这时候我们往往会选择fork，然后自行修改或使用。但是一段时间后，原项目开发者可能会更新项目，追加新的功能或者修复已知BUG。这时，为了避免与上游脱节，我们需要将上游仓库合入到我们fork的仓库中。 操作步骤这里以本blog的主题（theme）为例，我fork了原作者的仓库，并在其基础上做了些个性化的改动，这些改动作者肯定不会合入的。但是近期原作者做了一些更新，加入的新的功能，因此我要将最新的版本合入到我自己的仓库中。详细操作步骤如下： 将要自己的仓库克隆（clone）到本地1git clone https:&#x2F;&#x2F;github.com&#x2F;AxisRay&#x2F;hexo-theme-material-flow.git 添加要合入的上游仓库1git remote add upstream https:&#x2F;&#x2F;github.com&#x2F;stkevintan&#x2F;hexo-theme-material-flow.git 拉取（pull）上游仓库1git fetch upstream 创建并切换到新的本地分支（branch），并将其连接到上游仓库要合入的分支1git checkout -b upm upstream&#x2F;master 切换到自己仓库要合入的分支，并将上述新分支合入12git checkout mastergit merge upm 最后将自己仓库更新（push）上去即可1git push origin master","categories":[{"name":"git","slug":"git","permalink":"http://blog.raycn.pub/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://blog.raycn.pub/tags/git/"}]},{"title":"解决jenkins没有权限调用Docker的问题","slug":"jenkins-docker-permission-problem","date":"2017-06-17T14:23:33.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2017/06/17/jenkins-docker-permission-problem/","link":"","permalink":"http://blog.raycn.pub/2017/06/17/jenkins-docker-permission-problem/","excerpt":"jenkins在构建步骤中调用docker提示如下错误。 dial unix /var/run/docker.sock: permission denied. Are you trying to connect to a TLS-enabled daemon without TLS?","text":"jenkins在构建步骤中调用docker提示如下错误。 dial unix /var/run/docker.sock: permission denied. Are you trying to connect to a TLS-enabled daemon without TLS? 明显这是因为权限问题导致，参考stackoverflow上的解决方案，将Jenkins用户添加到docker组中，重启docker服务即可。 1sudo usermod -a -G docker $username 但是或许是由于docker或者系统版本比较老，没有所谓的docker组，只有dockerroot组。将jenkins添加到dockerroot组后仍然提示权限不足。直接让jenkins以root身份运行也不安全，于是考虑使用sudo曲线救国。 编辑sudoers文件1visudo 添加命令别名12## DockerCmnd_Alias DOCKER &#x3D; &#x2F;usr&#x2F;bin&#x2F;docker 给jenkins以sudo权限1jenkins ALL=(ALL) NOPASSWD:DOCKER :wq保存退出，调整jenkins构建步骤，增加sudo 123456716:09:36 Sending build context to Docker daemon 148 kB16:09:36 Sending build context to Docker daemon 16:09:36 Step 0 : FROM microsoft&#x2F;dotnet16:09:36 ---&gt; 2c9e30c8fccd16:09:36 Step 1 : WORKDIR &#x2F;app16:09:36 ---&gt; Running in 3c50062d5f6d16:09:40 ---&gt; 3d22684a6579 至此问题解决，不过这样还是后有些安全隐患，后续再考虑优化吧。","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/categories/linux/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://blog.raycn.pub/tags/docker/"},{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/tags/linux/"},{"name":"jenkins","slug":"jenkins","permalink":"http://blog.raycn.pub/tags/jenkins/"}]},{"title":"Bash变量操作实验-变量的测试和内容替换","slug":"linux-set-var","date":"2015-01-29T02:15:21.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2015/01/29/linux-set-var/","link":"","permalink":"http://blog.raycn.pub/2015/01/29/linux-set-var/","excerpt":"前言某些时候，我们在给变量赋值之前要对某个变量进行判断,根据结果来决定我们下一步的赋值操作，下面演示下几种判断的方式。","text":"前言某些时候，我们在给变量赋值之前要对某个变量进行判断,根据结果来决定我们下一步的赋值操作，下面演示下几种判断的方式。 实验准备1234$ var_value=\"test\"$ var_empty=\"\"$ unset var_null$ result=\"hello\" 先创建4个变量（实际上是3个，因为var_null不存在）。var_value值为testvar_empty值为空字符var_null不存在，用unset确保它不存在result用来保存结果，先赋个初值hello 实验1、“-”操作符1234567891011$ echo $resulthello$ result=$&#123;var_value-default&#125;$ echo $resulttest$ result=$&#123;var_empty-default&#125;$ echo $result$ result=$&#123;var_null-default&#125;$ echo $resultdefault 因为$var_value存在，所以$result的值被替换成$var_value的值，即test虽然$var_value为空字符，但也视为变量存在，因此$result的值被替换为$var_empty的值，即空字符因为$var_null不存在，所以$result的值被替换为默认值default 要把空字符也视为变量不存在，则需要”:”操作符 Tips需要注意的是，绝大多数情况下，Bash并不区分空变量和空字符变量,但是此处会做区分。而“：”操作符会取消他们之间的差异。详情可点击这里查看 12345$ echo $resulthello$ result=$&#123;var_empty:-default&#125;$ echo $resultdefault 实验2、“+”操作符“+”基本上和“-”是完全相反的，而“：”则会和刚才一样把空字符变量和空变量一视同仁 12345678910111213$ echo $resulthello$ result=$&#123;var_value+default&#125;$ echo $resultdefault$ result=$&#123;var_empty+default&#125;$ echo $resultdefault$ result=$&#123;var_null+default&#125;$ echo $result$ result=$&#123;var_empty:+default&#125;$ echo $result 实验3、“=”操作符“=”操作符的规则基本和“-”一致，但是替换时会把两个变量一同替换。而“：”操作符会把空字符变量和空变量一视同仁。 12345678910111213141516171819$ echo $resulthello$ result=$&#123;var_value=default&#125;$ echo $resulttest$ echo $var_valuetest$ result=$&#123;var_empty=default&#125;$ echo $result$ echo $var_value$ result=$&#123;var_null=default&#125;$ echo $resultdefault$ echo $var_nulldefault$ result=$&#123;var_empty:+default&#125;$ echo $result 实验4、“?”操作符“?”操作符与“-”的差异是，当被检查的变量为空时，会将默认字符送入标准错误流，而不是赋值给变量。 123456789101112131415$ echo $resulthello$ result=$&#123;var_value?default&#125;$ echo $resulthello$ result=$&#123;var_empty?default&#125;$ echo $result$ result=$&#123;var_null?default&#125;bash: var_null: default$ echo $result$ result=$&#123;var_empty:?default&#125;bash: var_null: default$ echo $result","categories":[{"name":"Linux","slug":"Linux","permalink":"http://blog.raycn.pub/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/tags/linux/"},{"name":"bash","slug":"bash","permalink":"http://blog.raycn.pub/tags/bash/"}]},{"title":"tmux使用笔记","slug":"tmux-intruduction","date":"2015-01-28T04:33:42.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2015/01/28/tmux-intruduction/","link":"","permalink":"http://blog.raycn.pub/2015/01/28/tmux-intruduction/","excerpt":"tmux简介tmux是一个优秀的终端复用软件，类似GNU Screen，但来自于OpenBSD，采用BSD授权。tmux采用C/S模型构建，包含以下模块Server，Session，Window，Panel","text":"tmux简介tmux是一个优秀的终端复用软件，类似GNU Screen，但来自于OpenBSD，采用BSD授权。tmux采用C/S模型构建，包含以下模块Server，Session，Window，Panel 安装使用1$ apt-get install tmux 终端中键入tmux,首先会启动Server,然后就创建一个Session，这个Session会创建一个Window，仅包含一个Panel。 tmux new -s sessiontmux new -s session -d #在后台建立会话tmux ls #列出会话tmux attach -t session #进入某个会话 Server 服务器第一次键入tmux启动的时候就开启了一个服务器Server，通过这个服务器甚至可以实现终端共享。 Session 会话每使用tmux命令启动，便会建立一个会话Session，一个服务器可以保持多个会话连接，同时我们也可以在多个会话之间切换。 Window 窗口一个Session可包含多个窗口Window，每个窗口都以标签的形式显示在Session下面的状态栏里 Panel 面板每个窗口可以划分多个Panel，实现分屏显示 操作说明Ctrl+b (C-b) 是激活tmux控制台的默认快捷键，以下的控制命令都要先键入Ctrl+b激活控制台。 1、系统操作 ? 列出所有快捷键；按q返回 d 脱离当前会话；这样可以暂时返回Shell界面，输入tmux attach能够重新进入之前的会话 D 选择要脱离的会话；在同时开启了多个会话时使用 s 选择并切换会话；在同时开启了多个会话时使用 : 进入命令行模式；此时可以输入支持的命令，例如kill-server可以关闭服务器 [ 进入复制模式；此时的操作与vi/emacs相同，按q/Esc退出 ~ 列出提示信息缓存；其中包含了之前tmux返回的各种提示信息 C-z 挂起当前会话 2、窗口操作c 创建新窗口&amp; 关闭当前窗口p 切换至上一窗口n 切换至下一窗口l 在前后两个窗口间互相切换w 通过窗口列表切换窗口, 重命名当前窗口；这样便于识别. 修改当前窗口编号；相当于窗口重新排序f 在所有窗口中查找指定文本数字 切换至制定窗口 3、面板操作” 将当前面板平分为上下两块% 将当前面板平分为左右两块x 关闭当前面板! 将当前面板置于新窗口；即新建一个窗口，其中仅包含当前面板q 显示面板编号o 在当前窗口中选择下一面板{ 向前置换当前面板} 向后置换当前面板Alt+o 逆时针旋转当前窗口的面板Alt+方向键 以5个单元格为单位移动边缘以调整当前面板大小Ctrl+o 顺时针旋转当前窗口的面板方向键 移动光标以选择面板Ctrl+方向键 以1个单元格为单位移动边缘以调整当前面板大小Space 在预置的面板布局中循环切换；依次包括even-horizontal、even-vertical、main-horizontal、main-vertical、tiled","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/tags/linux/"},{"name":"tmux","slug":"tmux","permalink":"http://blog.raycn.pub/tags/tmux/"}]},{"title":"Ubuntu下修改Bash的提示符","slug":"ubuntu-change-bash-prompt","date":"2015-01-27T14:23:33.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2015/01/27/ubuntu-change-bash-prompt/","link":"","permalink":"http://blog.raycn.pub/2015/01/27/ubuntu-change-bash-prompt/","excerpt":"Bash的提示符设置保存在$PS1这个变量中，通过echo命令可以查看当前设置 12ray@Ray-Laptop:~$ echo $PS1$&#123;debian_chroot:+($debian_chroot)&#125;\\u@\\h:\\w\\$","text":"Bash的提示符设置保存在$PS1这个变量中，通过echo命令可以查看当前设置 12ray@Ray-Laptop:~$ echo $PS1$&#123;debian_chroot:+($debian_chroot)&#125;\\u@\\h:\\w\\$ 默认的一些特殊符号所代表的含义：\\d ：代表日期，格式为weekday month date，例如：”Mon Aug 1”\\H ：完整的主机名称。例如：我的机器名称为：Ray-Laptop.local，则这个名称就是Ray-Laptop.local\\h ：仅取主机的第一个名字，如上例，则为Ray-Laptop，local则被省略\\t ：显示时间为24小时格式，如：HH：MM：SS\\T ：显示时间为12小时格式\\A ：显示时间为24小时格式：HH：MM\\u ：当前用户的账号名称\\v ：BASH的版本信息\\w ：完整的工作目录名称。家目录会以 ~代替\\W ：利用basename取得工作目录名称，所以只会列出最后一个目录\\# ：下达的第几个命令$ ：提示字符，如果是root时，提示符为：# ，普通用户则为：$ 我们可以通过修改提示符方法解决进入较深目录时，提示符过长的问题： 1PS1=$&#123;debian_chroot:+($debian_chroot)&#125;\\u@\\h:\\W\\$ 即将原来的\\w替换为\\W，但是该方法仅在本次会话有效。我们可通过修改用户根目录～下的.bashrc文件，达到长期有效的目的。 修改前：修改后：","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/tags/linux/"},{"name":"bash","slug":"bash","permalink":"http://blog.raycn.pub/tags/bash/"},{"name":"prompt","slug":"prompt","permalink":"http://blog.raycn.pub/tags/prompt/"}]},{"title":"linux文件及目录权限笔记","slug":"linux-dir-and-file-permission","date":"2015-01-04T06:44:36.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2015/01/04/linux-dir-and-file-permission/","link":"","permalink":"http://blog.raycn.pub/2015/01/04/linux-dir-and-file-permission/","excerpt":"文件权限权限分三种，读（r）写（w）可执行（x）。“r–”、“rw-”、“rwx”这三种权限组合没什么好说的。“r–”只读，“rw-”可读可写，“rwx”可读可写可执行，下面介绍几种比较另类权限组合。","text":"文件权限权限分三种，读（r）写（w）可执行（x）。“r–”、“rw-”、“rwx”这三种权限组合没什么好说的。“r–”只读，“rw-”可读可写，“rwx”可读可写可执行，下面介绍几种比较另类权限组合。 -w-、-wx：只写权限，只能写入不能读取。 12345678-rw-rw--w- 1 root root 5 Jan 4 12:00 testfile/tmp$ cat testfilecat: testfile: Permission denied/tmp$ echo \"write-test\"&gt;testfile/tmp$ su rootPassword: root@axisray:/tmp# cat testfile write-test –x、-wx：虽然有执行权限，但是由于没有读权限，连文件内容都不知道谈何执行呢？ 1234567891011-rw-rw---x 1 root root 26 Jan 4 12:53 testfile*/tmp$ ./testfile /bin/bash: ./testfile: Permission denied/tmp$ su rootPassword: root@axisray:/tmp# chmod o=rx testfileroot@axisray:/tmp$ ll | grep testfile-rw-rw-r-x 1 root root 26 Jan 4 12:53 testfile*root@axisray:/tmp# su ray/tmp$ ./testfile hello! 目录权限目录权限的关键在于可执行权限（x），下面逐个说明 r–、rw-、-w-：无可执行drwxr-xr– 4 root root 4096 Jan 4 11:53 test/ cd命令需要可执行（x）权限，因此无法通过cd命令切换到该目录下 12/tmp$ cd test/bash: cd: test/: Permission denied 子目录也是不可切换的，即便对子目录有完整权限 12/tmp$ cd test/test-dir1/bash: cd: test/test-dir1/: Permission denied 同样对于cat命令，由于缺少可执行（x）权限，该目录下的文件也是不可读的。 12/tmp$ cat test/test-file2cat: test/test-file2: Permission denied cp命令也是不可以的 12/tmp$ cp test/test-file2 ./cp: cannot stat ‘test/test-file2’: Permission denied 若该目录权限为rw-或-w-即有写入权限，由于缺少可执行（x）权限，也无法用mkdir等命令创建文件或目录 1234/tmp$ mkdir test/testdirmkdir: cannot create directory ‘test/testdir’: Permission denied/tmp$ cp testfile ./test/cp: cannot stat ‘./test/testfile’: Permission denied 同样即使该目录下的文件可读可执行，也无法执行该目录下的文件 12/tmp$ ./test/test-file2bash: ./test/test-file2: Permission denied ll命令虽然可以列出该目录下的文件及目录，但是同样因为可执行（x）权限无法查看属性 1234567891011121314/tmp$ ll testls: cannot access test/..: Permission deniedls: cannot access test/.: Permission deniedls: cannot access test/test-file2: Permission deniedls: cannot access test/test-dir2: Permission deniedls: cannot access test/test-dir1: Permission deniedls: cannot access test/test-file1: Permission deniedtotal 0d????????? ? ? ? ? ? ./d????????? ? ? ? ? ? ../d????????? ? ? ? ? ? test-dir1/d????????? ? ? ? ? ? test-dir2/-????????? ? ? ? ? ? test-file1-????????? ? ? ? ? ? test-file2 对子目录来说，无法列出文件及目录，即便有完整权限 12/tmp$ ll test/test-dir1/ls: cannot access test/test-dir1/: Permission denied –x、-wx、rwx、r-x：有可执行权限drwxr-x–x 4 root root 4096 Jan 4 13:15 test/ 使用cp命令可以正常切换至该目录 12/tmp$ cd test//tmp/test$ 但是无法使用ll列出该目录下的文件及目录，因为没有读权限（r） 12/tmp/test$ llls: cannot open directory .: Permission denied 子目录不受影响，只要有相应权限 12345/tmp/test$ ll test-dir1total 12drwxr-xrwx 2 root root 4096 Jan 4 13:27 ./drwxr-x--x 4 root root 4096 Jan 4 13:15 ../-rw-r--r-- 1 root root 9 Jan 4 13:27 test-file3 可使用cat查看目录下的文件，只要有相应文件的读权限 123/tmp/test$ cat test-file2#!/bin/bashecho \"hello!\" 也可以使用cp拷贝该目录下的文件，只要有相应文件的读权限 1234/tmp/test$ cp test-file2 ..//tmp/test$ cd ../tmp$ ll | grep test-file-rw-r--r-x 1 ray ray 26 Jan 4 13:43 test-file2* 也可以执行该目录下的文件，只要有相应文件的读和可执行权限 12/tmp$ ./test/test-file2hello! 如果该目录权限为-wx或rwx即有写入权限我们就可以用mkdir、cp等命令在该目录创建子目录或文件 123456789101112/tmp$ mkdir test/testdir/tmp$ cp testfile test//tmp$ su rootPassword: root@axisray:/tmp# ll test/total 24drwxrwxr-x 2 ray ray 4096 Jan 4 14:29 testdir/drwxr-xrwx 2 root root 4096 Jan 4 13:27 test-dir1/drwxr-xrw- 2 root root 4096 Jan 4 13:15 test-dir2/-rw-rw-r-x 1 ray ray 26 Jan 4 14:29 testfile*-rw-r----- 1 root root 11 Jan 4 13:15 test-file1-rw-r--r-x 1 root root 26 Jan 4 13:15 test-file2* 如果该目录权限为r-x或rwx即有读取权限我们可以用ll列出当前目录的子目录及文件 123456789101112root@axisray:/tmp# chmod o=rx testroot@axisray:/tmp# su ray/tmp$ ll testtotal 32drwxr-xr-x 5 root root 4096 Jan 4 14:29 ./drwxrwxrwt 4 root root 4096 Jan 4 14:42 ../drwxrwxr-x 2 ray ray 4096 Jan 4 14:29 testdir/drwxr-xrwx 2 root root 4096 Jan 4 13:27 test-dir1/drwxr-xrw- 2 root root 4096 Jan 4 13:15 test-dir2/-rw-rw-r-x 1 ray ray 26 Jan 4 14:29 testfile*-rw-r----- 1 root root 11 Jan 4 13:15 test-file1-rw-r--r-x 1 root root 26 Jan 4 13:15 test-file2* 总结 对于文件权限，可读权限（r）是可执行（x）的基础 对于目录权限，可执行（x）权限是关键，没有可执行权限意味着所有命令都不能在该目录及子目录下执行，该目录及子目录下的文件也不能被执行。这意味着我们常用的命令cd、ls、mkdir、cp、mv、rm等等在该目录下全部失效","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/tags/linux/"},{"name":"bash","slug":"bash","permalink":"http://blog.raycn.pub/tags/bash/"}]},{"title":"解决TortoiseSVN/Git覆盖图标失效的问题","slug":"tortoise-icon-problem","date":"2014-12-09T12:38:23.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2014/12/09/tortoise-icon-problem/","link":"","permalink":"http://blog.raycn.pub/2014/12/09/tortoise-icon-problem/","excerpt":"最近发现TortoiseGit的覆盖图标不见了，从版本库里clone下来的源码没有了已同步，已修改之类的图标提示。下面给出解决办法：（感谢woyaowenzi）","text":"最近发现TortoiseGit的覆盖图标不见了，从版本库里clone下来的源码没有了已同步，已修改之类的图标提示。下面给出解决办法：（感谢woyaowenzi） Windows最多允许15个覆盖图标，系统占用了约4个，用户可用的只有11个左右。TortoiseSVN或者TortoiseGit标准会占用7个覆盖图标，分别为：普通图标、已修改图标、冲突指示图标、已删除图标、新增文件图标、忽略图标、未版本化图标而每个网盘类的客户端又会占用3个左右。所有应用程序的覆盖图标都需要在注册表 1HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers 下面增加一个项目，当需要显示覆盖图标时，Windows会按照项目名称的字母顺利依次查询在这些项目里所指示的接口，以检测是否有覆盖图标，当检测到11个有效的接口后，Windows就会自动停止继续向下检测，这样，后来的覆盖图标就不会显示了。 解决方法：把其他网盘类的覆盖图标注册表项删除，让TortoiseSVN/Git的注册表项提前","categories":[{"name":"git","slug":"git","permalink":"http://blog.raycn.pub/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://blog.raycn.pub/tags/git/"},{"name":"tortoise","slug":"tortoise","permalink":"http://blog.raycn.pub/tags/tortoise/"}]},{"title":"解决ubuntu下phpmyadmin缺少mcrypt扩展的错误","slug":"php-mod-mcrypt","date":"2014-12-06T13:08:46.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2014/12/06/php-mod-mcrypt/","link":"","permalink":"http://blog.raycn.pub/2014/12/06/php-mod-mcrypt/","excerpt":"","text":"在ubuntu用apt-get安装phpmyadmin后，总会出现如下错误解决方法很简单，使用如下命令启用mcrypt组件 1$ php5enmod mcrypt","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.raycn.pub/categories/linux/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.raycn.pub/tags/ubuntu/"},{"name":"phpmyadmin","slug":"phpmyadmin","permalink":"http://blog.raycn.pub/tags/phpmyadmin/"}]},{"title":"从光盘或镜像中安装.NetFramework","slug":"install-netfx3-from-sysimg","date":"2014-12-05T03:55:12.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2014/12/05/install-netfx3-from-sysimg/","link":"","permalink":"http://blog.raycn.pub/2014/12/05/install-netfx3-from-sysimg/","excerpt":"","text":"windows8预装了.Net Framework4.0，但是4.0并不会向下兼容使用更早.Net版本编写的程序。当我们运行一个使用更早版本编写的.Net程序时，Windows会自动帮我们下载并安装.Net Framework3.5。但是当遇到没有网络或者网速比较慢的时候就比较难受了。所以我们可以选择从Windows8光盘或者镜像安装.假设光盘或光盘镜像的盘符为X，在命令提示符中输入 1DISM &#x2F;Online &#x2F;Enable-Feature &#x2F;FeatureName:NetFx3 &#x2F;All &#x2F;LimitAccess &#x2F;Source:X:\\sources\\sxs","categories":[{"name":"windows","slug":"windows","permalink":"http://blog.raycn.pub/categories/windows/"}],"tags":[{"name":"dotnet","slug":"dotnet","permalink":"http://blog.raycn.pub/tags/dotnet/"}]},{"title":"在openwrt中利用ipset将特定流量转发到shadowsocks","slug":"openwrt-ipset-redirect-shadowsocks","date":"2014-12-01T14:43:23.000Z","updated":"2020-08-16T13:30:14.033Z","comments":true,"path":"2014/12/01/openwrt-ipset-redirect-shadowsocks/","link":"","permalink":"http://blog.raycn.pub/2014/12/01/openwrt-ipset-redirect-shadowsocks/","excerpt":"一、前言虽然Chrome里的SwitchySharp插件可以根据规则自动转发特定流量到Shadowsocks，但是这种方式局限性还是很大。[北落师门][1]的博文中提供了一种在路由上自动转发特定流量的方法，使得转发过程对于客户端是透明的。我参考他的方法，做了一些改进。 使用gfwlist扩大适用网站范围 使用ss-tunnel解决DNS污染 大致过程如下 dnsmasq将指定列表中的域名通过ss-tunnel发往未被污染的DNS进行解析，并将结果保存到ipset中 在iptable中建立规则，将ipset中的IP的TCP流量重定向到ss-redir透明代理","text":"一、前言虽然Chrome里的SwitchySharp插件可以根据规则自动转发特定流量到Shadowsocks，但是这种方式局限性还是很大。[北落师门][1]的博文中提供了一种在路由上自动转发特定流量的方法，使得转发过程对于客户端是透明的。我参考他的方法，做了一些改进。 使用gfwlist扩大适用网站范围 使用ss-tunnel解决DNS污染 大致过程如下 dnsmasq将指定列表中的域名通过ss-tunnel发往未被污染的DNS进行解析，并将结果保存到ipset中 在iptable中建立规则，将ipset中的IP的TCP流量重定向到ss-redir透明代理 二、配置Shadowsocks客户端我使用的是shadowsocks-libev（包含 ss-{redir,local,tunnel} 三个可执行文件） shadowsocks-libev_1.5.3-1_ar71xx.ipk 其他版本可以去sourceforge的openwrt-dist下载. [1]: http://hong.im/2014/07/08/use-ipset-with-shadowsocks-on-openwrt/ “使用ipset让openwrt上的shadowsocks更智能的重定向流量-北落师门” 用WinSCP上传到路由器，或者用wget命令直接在路由上下载。然后用opkg安装。 1$ opkg install shadowsocks-libev*.ipk 安装完成后编辑shadowsocks的配置文件。 1$ vim /etc/shadowsocks.json 请按实际情况自行修改 1234567&#123; &quot;server&quot;:&quot;198.199.101.201&quot;, &quot;server_port&quot;:10086, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;fuckgfw&quot;, &quot;method&quot;:&quot;aes-256-cfb&quot;&#125; 然后让shadowsocks自动启动 1$ /etc/init.d/shadowsocks enable 修改shadowsocks的启动配置文件 1$ vim /etc/init.d/shadowsocks 修改成如下所示 123456789101112131415161718192021222324252627#!/bin/sh /etc/rc.commonSTART=95SERVICE_USE_PID=1SERVICE_WRITE_PID=1SERVICE_DAEMONIZE=1CONFIG=/etc/shadowsocks.jsonstart() &#123; # Client Mode #service_start /usr/bin/ss-local -c $CONFIG # Proxy Mode service_start /usr/bin/ss-redir -c $CONFIG service_start /usr/bin/ss-tunnel -c $CONFIG -l 5353 -L 8.8.8.8:53 -u&#125;stop() &#123; # Client Mode #service_stop /usr/bin/ss-local # Proxy Mode service_stop /usr/bin/ss-redir service_stop /usr/bin/ss-tunnel&#125; 至此，shadowsocks的客户端配置完成 三、配置dnsmasq dnsmasq可以将指定列表中的域名通过ss-tunnel发往未被污染的DNS进行解析，并将结果保存到ipset中。但是OpenWrt默认版本的dnsmasq没有ipset功能，同时也没有安装ipset。 不过Openwrt源中提供了完整版本的dnsmasq即dnsmasq-full。因此我们可以执行以下命令卸载精简版并安装完整版本的dnsmasq和ipset。 1234$ opkg update$ opkg remove dnsmasq$ opkg install dnsmasq-full$ opkg install ipset 安装ipset的时候可能会报类似下面的错误 12345678910111213kmod: failed to insert /lib/modules/3.10.44/ip_set.kokmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ip.kokmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ipmac.kokmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_port.kokmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ip.kokmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ipport.kokmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ipportip.kokmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ipportnet.kokmod: failed to insert /lib/modules/3.10.44/ip_set_hash_net.kokmod: failed to insert /lib/modules/3.10.44/ip_set_hash_netiface.kokmod: failed to insert /lib/modules/3.10.44/ip_set_hash_netport.kokmod: failed to insert /lib/modules/3.10.44/ip_set_list_set.kokmod: failed to insert /lib/modules/3.10.44/xt_set.ko 不用担心，因为ipset安装后需要重启才能正常工作，我们暂时先不重启，继续配置。打开dnsmasq的配置文件 1$ vim /etc/dnsmasq.conf 在最后面加入 1conf-dir=/etc/dnsmasq.d 在/etc目录下新建一个目录dnsmasq.d 1$ mkdir /etc/dnsmasq.d 在这个目录下，我们要存放规则文件，将特定域名发往ss-tunnel。我采用的是gfwlist提供的规则，但是需要转换成dnsmasq认可的配置文件。我提供了一份转换好的配置文件，大家可以直接下载到dnsmasq.d目录下。 12$ cd /etc/dnsmasq.d$ wget http://axisray.me/share/gfwdomains.conf 关于这份配置文件需要说明的是，dnsmasq会把列表中的域名发往127.0.0.1:5353解析，并将结果保存在名为gfwipset的ipset中。如果你配置的ss-tunel和ipset和我不一样的话，就需要手动处理该配置文件，或者根据下面的说明自行生成合适的配置文件。 四、ipset配置我们需要创建一个ipset，并在iptable中添加一条规则，重定向ipset中ip的流量到shadowsocks(ss-redir在1080端口监听)。 12ipset -N gfwipset iphashiptables -t nat -A PREROUTING -p tcp -m set --match-set gfwipset dst -j REDIRECT --to-port 1080 值得注意的是，这两条命令重启后就会失效，所以我们需要添加到/etc/rc.local中去 1$ vim /etc/rc.local 修改成下面所示 1234567# Put your custom commands here that should be executed once# the system init finished. By default this file does nothing.ipset -N gfwipset iphashiptables -t nat -A PREROUTING -p tcp -m set --match-set gfwipset dst -j REDIRECT --to-port 1080exit 0 至此，所有配置均已完成，重启路由即可 1$ reboot 五、关于gfwlist转换成dnsmasq的配置文件这是我从网上找到的一个Python的脚本 gfwlist.pylink123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960# Modified from http://autoddvpn.googlecode.com/svn/trunk/grace.d/gfwListgen.py#!/usr/bin/env pythonfrom os.path import expanduserimport urllibimport base64import stringgfwlist = 'http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt'# some sites can be visited via https or is already in known listoklist = ['flickr.com','amazon.com','twimg.com']print (\"fetching gfwList ...\")d = urllib.urlopen(gfwlist).read()print(\"gfwList fetched\")data = base64.b64decode(d)lines = string.split(data, \"\\n\")gfwlistfile = open('./gfwlist.txt', 'wa')for l in lines: gfwlistfile.write(l+'\\n')gfwlistfile.close()newlist = []for l in lines: if len(l) == 0: continue if l[0] == \"!\": continue if l[0] == \"@\": continue if l[0] == \"[\": continue l = string.replace(l, \"||\",\"\").lstrip(\".\") l = string.replace(l, \"|https://\",\"\") l = string.replace(l, \"|http://\",\"\") # strip everything from \"/\" to the end if l.find(\"/\") != -1: l = l[0:l.find(\"/\")] if l.find(\"%2F\") != -1: continue if l.find(\"*\") != -1: continue if l.find(\".\") == -1: continue if l in oklist: continue newlist.append(l)newlist = list(set(newlist))newlist.sort()# generate dnsmasq configurationgfwdn = open('./gfwdomains.conf', 'wa')for l in newlist: gfwdn.write('server=/'+l+'/127.0.0.1#5353\\n')#ss-tunel gfwdn.write('ipset=/'+l+'/gfwipset\\n')#ipsetgfwdn.close()","categories":[{"name":"openwrt","slug":"openwrt","permalink":"http://blog.raycn.pub/categories/openwrt/"}],"tags":[{"name":"openwrt","slug":"openwrt","permalink":"http://blog.raycn.pub/tags/openwrt/"},{"name":"shadowsocks","slug":"shadowsocks","permalink":"http://blog.raycn.pub/tags/shadowsocks/"}]}]}